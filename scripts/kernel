#!/bin/bash

# ---------------------------------------------- #
# Helper script for kernel maintenance in BirbOS #
# ---------------------------------------------- #

println()
{
    case $1 in
        ERROR) echo -e "\e[31mERROR: $2\e[0m" ;;
        WARNING) echo -e "\e[35mWARNING: $2\e[0m" ;;
        *) echo -e "\e[32m=> \e[0m$@" ;;
    esac
}


print_help()
{
	echo "Usage: kernel [OPTION]"
	echo ""
	echo "      --reinstall           reinstall the kernel"
}

root_check()
{
    if [ "$(whoami)" != "root" ]
    then
        println ERROR "This command needs to be run with root privileges"
        exit 1
    fi
}

nvidia_notification()
{
	# Check for nvidia drivers
	if [ -n "$(grep "nvidia-drivers" /var/lib/birb/nest )" ]
	then
		println WARNING "To finish the installation, you need to reinstall nvidia drivers"
		echo -e "You can reinstall the nvidia drivers by running \e[1mbirb nvidia-drivers\e[0m"
		echo "Remember that you need to exit your window manager before you can reinstall the drivers"
	fi
}

reinstall()
{
	set -e

	root_check

	println "Compiling the kernel"
	cd /usr/src/linux
	make -j$(nproc)

	println "Installing kernel modules"
	make modules_install

	println "Mounting the boot partition"
	mount $BOOT_PARTITION /boot

	println "Installing the BirbOS kernel files to /boot"
	KERNEL_VERSION="$(file /usr/src/linux | awk '{print $5}' | xargs basename | cut -d'-' -f2)"

	cp -iv /usr/src/linux/arch/x86/boot/bzImage /boot/vmlinuz-${KERNEL_VERSION}-birbos
	cp -iv /usr/src/linux/System.map /boot/System.map-${KERNEL_VERSION}

	nvidia_notification
}

# Handle arguments
while test $# -ge 0; do
	case $1 in
		--reinstall) reinstall ;;

		*)
			print_help
			exit 1
			;;
	esac
	exit 0
done
